<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-Instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <!-- project management section -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>sobek</groupId>
  <artifactId>sobek</artifactId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>
  <url>blah</url>
  <description>This is the top level project for the Sobek project</description>
  <!-- Property variables used throughout POM -->
  <properties>
	<!--<nexusURL>http://url:port/nexus/content/repositories/public</nexusURL>-->
	<wl.pingTimeout>180000</wl.pingTimeout>
	<jdk.version>1.7</jdk.version>
  </properties>
  <!-- Information about the committers on this project -->
  <developers>
    <developer>
	  <id></id>
	  <name></name>
	  <email></email>
	</developer>
  </developers>
  <!-- Specifies the organization who produces this project -->
  <organization>
    <name></name>
	<url></url>
  </organization>
  <!-- Modules of the project -->
  <modules>
    <module>integration-test</module>
    <module>source</module>
  </modules>
  
  <!-- Specific Build Profiles -->
  <profiles>
    <!--
	  Profile to run Integrration Tests. Will run all files ending in 
		*IT.java inside the test directory
	-->
    <profile>
	  <id>IT</id>
	  <build>
	    <plugins>
		  <plugin>
		    <artifactId>maven-surefire-plugin</artifactId>
			<executions>
			  <execution>
			    <id>surefire-it</id>
				<phase>integration-test</phase>
				<goals>
				  <goal>test</goal>
				</goals>
				<configuration>
				  <useFile>false</useFile>
				  <includes>
					<include>**/*IT.java</include>
				  </includes>
				</configuration>
			  </execution>
			</executions>
		  </plugin>
		</plugins>
	  </build>
	</profile>
	<!--
		Profiles to set properties for different builds. This is helpful
			to resolve collision (e.g ports) when builds run in parallel
	-->
	<profile>
	  <!-- Commit Build -->
	  <id>commit</id>
	  <properties>
	    <metric_port>45601</metric_port>
	  </properties>
	</profile>
	<profile>
	  <!-- Full Build -->
	  <id>full</id>
	  <properties>
	    <metric_port>45602</metric_port>
	  </properties>
	</profile>
	<profile>
	  <!-- Nightly Build -->
	  <id>nightly</id>
	  <properties>
	    <metric_port>45601</metric_port>
	  </properties>
	</profile>
	<!--
		To be used by automated build tool (e.g Hudson) Set some configuration
		  properties via the system properties to override the config.xml
	-->
	<profile>
	  <id>build</id>
	  <build>
		<pluginManagement>
		  <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <version>1.5</version>
            </plugin>
		    <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.10</version>
			</plugin>
			<plugin>
                <groupId>org.codehause.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.1.3</version>
			</plugin>
		  </plugins>
		</pluginManagement>
	  </build>
	</profile>
	<!--
		Profile needed to make the Nexus work. This is a hack to override Maven
			Central to a bogus url. This bogus url will be directed to our 
			nexus mirror defined in settings.xml This hack is necessary to get 
			snapshots and releases fowarded to nexus.
	<profile>
	  <id>nexus</id>
	  <activation>
	    <activeByDefault>true</activeByDefault>
	  </activation>
	  <repositories>
	    <repository>
		  <id>central</id>
		  <url>http://central</url>
		  <releases>
		    <enabled>true</enabled>
		  </releases>
		  <snapshots>
		    <enabled>true</enabled>
		  </snapshots>
		</repository>
	  </repositories>
	  <pluginRepositories>
	    <pluginRepository>
		  <id>central</id>
		  <url>http://central</url>
		  <releases>
		    <enabled>true</enabled>
		  </releases>
		  <snapshots>
		    <enabled>true</enabled>
		  </snapshots>
		</pluginRepository>
	  </pluginRepositories>
	</profile>
	-->
	<!-- Profile of things to do when deploying artifacts -->
	<profile>
	  <!-- Build installer archives -->
	  <modules />
	  <!-- Build source archives -->
	  <build>
	    <plugins>
		  <plugin>
		    <artifactId>maven-assembly-plugin</artifactId>
		    <inherited>false</inherited>
		    <configuration>
		      <descriptorRefs>
				<descriptorRef>project</descriptorRef>
			  </descriptorRefs>
		    </configuration>
			<executions>
			  <execution>
			    <id>make-assembly</id>
				<phase>package</phase>
				<goals>
				  <goal>single</goal>
				</goals>
			  </execution>
			</executions>
		  </plugin>
		</plugins>
	  </build>
	</profile>
	
  </profiles>
  <!-- Global Dependencies for all projects -->
  <dependencies>
    <dependency>
	  <groupId>junit</groupId>
	  <artifactId>junit</artifactId>
	  <scope>test</scope>
	</dependency>
    <dependency>
	  <groupId>org.mockito</groupId>
	  <artifactId>mockito-core</artifactId>  
	  <version>1.9.5</version> 
	  <scope>test</scope>
	</dependency>
  </dependencies>
  
  <!-- Deployment information -->
  <distributionManagement>
    <site>
	  <id>${site-deploy-id}</id>
	  <name>${site-deploy-name}</name>
	  <url>${site-deploy-url}</url>
	</site>
	<repository>
	  <id>${deploy-id}</id>
	  <name>${deploy-name}</name>
	  <url>${deploy-url}</url>
	</repository>
	<snapshotRepository>
	  <id>${snapshot-deploy-id}</id>
	  <name>${snapshot-deploy-name}</name>
	  <url>${snapshot-deploy-url}</url>
	  <uniqueVersion>false</uniqueVersion>
	</snapshotRepository>
  </distributionManagement>
  <!-- Continuous Integration Information -->
  <ciManagement>
    <system>Jenkins</system>
	<url>${ci.url}</url>
  </ciManagement>

  <!-- Maven Reports -->
  <reporting>
    <plugins>
	  <!-- Javadocs -->
	  <plugin>
	    <artifactId>maven-javadoc-plugin</artifactId>
		<version>2.9</version>
		<reportSets>
		  <reportSet>
		    <id>aggregate</id>
			<reports>
			  <report>aggregate</report>
			</reports>
		  </reportSet>
		</reportSets>
	  </plugin>
	</plugins>
  </reporting>
  <!-- Dependency Management Section -->
  <!-- Please keep in ABC order (by artifactId) for ease of use -->
  <dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>6.0</version>
            <scope>provided</scope>
        </dependency>
	    <!-- 3rd Party Dependencies -->
		<dependency>
		    <groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>
        <dependency>
            <groupId>org.glassfish.appclient</groupId>
            <artifactId>gf-client-module</artifactId>
            <version>3.1.1</version>
        </dependency>
		<dependency>
		    <groupId>org.glassfish</groupId>
			<artifactId>javax.ejb</artifactId>
			<version>3.1.1</version>
		</dependency>
	  
	    <!-- ProjectX Dependencies - Alphabetical by artifact id -->
		
	</dependencies>
  </dependencyManagement>
  <build>
    <plugins>
	  <plugin>
		<artifactId>maven-compiler-plugin</artifactId>
		<configuration>
		  <source>${jdk.version}</source>
		  <target>${jdk.version}</target>
		</configuration>
	  </plugin>
	  <plugin>
		<artifactId>maven-jar-plugin</artifactId>
		<configuration>
		  <archive>
		    <manifest>
			  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
			  <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
			</manifest>
		  </archive>
		</configuration>
	  </plugin>
	</plugins>
	<pluginManagement>
	  <plugins>
		<plugin>
		  <artifactId>maven-assembly-plugin</artifactId>
		  <version>2.4</version>
	    </plugin>
		<plugin>
		  <artifactId>maven-dependency-plugin</artifactId>
		  <version>2.6</version>
		  <executions>
		    <execution>
			  <id>copy-dependencies</id>
			  <goals>
			    <goal>copy-dependencies</goal>
			  </goals>
			  <configuration>
			    <outputDirectory>target/lib</outputDirectory>
			  </configuration>
			</execution>
		  </executions>
	    </plugin>
		<plugin>
		  <artifactId>maven-surefire-plugin</artifactId>
		  <version>2.13</version>
		  <configuration>
			<useFile>false</useFile>
			<SystemPropertyVariables />
		  </configuration>
	    </plugin>
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-ejb-plugin</artifactId>
		  <version>2.3</version>
		  <configuration>
		    <ejbVersion>3.0</ejbVersion>
          	<!-- this is false by default -->
	      	<generateClient>true</generateClient>
	      	
	      	<!--<clientIncludes>
	            <clientInclude>**/*</clientInclude>>
	         </clientIncludes>-->
	         <clientExcludes>
	            <!-- this will exclude the default exclusions -->
	            <clientExclude>**/*Bean.class</clientExclude>
    			<clientExclude>**/*CMP.class</clientExclude>
    			<clientExclude>**/*Session.class</clientExclude>
    			<clientExclude>**/package.html</clientExclude>
	            <!-- additional exclusions -->
	            <clientExclude>**/persistence.xml</clientExclude>
	         </clientExcludes>
			 <archive>
				<manifest>
					<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
					<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
				</manifest>
				<manifestEntries>
					<Built-on>${maven.build.timestamp}</Built-on>
					<Developed-by>${project.organization.name}</Developed-by>
					<Revision>${buildNumber}</Revision>
				</manifestEntries>  
			</archive>
	      </configuration>
	    </plugin>
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-eclipse-plugin</artifactId>
		  <version>2.9</version>
		  <configuration>
		  	<downloadJavadocs>true</downloadJavadocs>
		  </configuration>
	    </plugin> 
		<plugin>
		  <artifactId>maven-resources-plugin</artifactId>
		  <version>2.6</version>
		  <configuration>
		    <filtering>true</filtering>
		  </configuration>
	    </plugin>
		<plugin>
		  <artifactId>maven-war-plugin</artifactId>
		  <version>2.3</version>
	    </plugin>
		<plugin>
		  <groupId>org.codehaus.mojo</groupId>
		  <artifactId>cobertura-maven-plugin</artifactId>
		  <version>2.5.2</version>
	    </plugin>
		<plugin>
		  <artifactId>maven-compiler-plugin</artifactId>
		  <version>3.0</version>
	    </plugin>
	    <plugin>
		  <artifactId>maven-jar-plugin</artifactId>
		  <version>2.4</version>
	    </plugin>
		<plugin>
		  <artifactId>maven-source-plugin</artifactId>
		  <version>2.2.1</version>
		  <executions>
		    <execution>
			  <id>attach-sources</id>
			  <goals>
			    <goal>jar</goal>
			  </goals>
			</execution>
		  </executions>
	    </plugin>
		<plugin>
		  <artifactId>maven-ear-plugin</artifactId>
		  <version>2.8</version>
		  <configuration>
			<defaultLibBundleDir>lib</defaultLibBundleDir>
			<archive>
				<manifest>
					<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
					<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
				</manifest>
				<manifestEntries>
					<Built-on>${maven.build.timestamp}</Built-on>
					<Developed-by>${project.organization.name}</Developed-by>
					<Revision>${buildNumber}</Revision>
				</manifestEntries>  
			</archive>
		   </configuration>
	    </plugin>
		<plugin>
		  <artifactId>maven-clean-plugin</artifactId>
		  <version>2.5</version>
	    </plugin>
<!--	    <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>1.2.0</version>
            <configuration>
                <container>
                    <containerId>glassfish3x</containerId>
                    <type>remote</type>
                </container>
                <configuration>
                    <type>runtime</type>
                    <properties>
                        <cargo.hostname>localhost</cargo.hostname>
                        <cargo.remote.username>admin</cargo.remote.username>
                        <cargo.remote.password>admin</cargo.remote.password>
                    </properties>
                </configuration> 
            </configuration>
            <dependencies>
                <dependency>
                    <groupId>org.glassfish.deployment</groupId>
                    <artifactId>deployment-client</artifactId>
                    <version>3.2-b06</version>
                </dependency>
            </dependencies>
        </plugin>
		-->
	  </plugins>
	</pluginManagement>
  </build>
</project>
